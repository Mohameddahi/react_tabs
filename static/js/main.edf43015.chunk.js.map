{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onTabSelected","selectedTabId","selectedTab","find","tab","id","className","map","classNames","href","onClick","title","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAcaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,cAGMC,EAAwBH,EAC3BI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOJ,MAAkBF,EAAK,GAEnD,OACE,qBAAKO,UAAU,UAAf,SAEE,sBAAK,UAAQ,gBAAb,UACE,qBAAKA,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GAAD,OACR,oBAEEE,UAAWE,IAAW,CACpB,YAAaN,IAAgBE,IAE/B,UAAQ,MALV,SAOE,mBACEK,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,WACHT,IAAkBG,EAAIC,IACxBL,EAAcI,IALpB,SASGA,EAAIO,SAfFP,EAAIC,WAuBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYU,gBCjDVb,EAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASf,EAAK,IAApD,mBAAOG,EAAP,KAAoBa,EAApB,KAMA,OACE,sBAAKT,UAAU,UAAf,UACE,oBACEA,UAAU,QADZ,mCAGsBJ,EAAYS,SAGlC,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAdY,SAACI,GACjBW,EAAeX,IAcXH,cAAeC,EAAYG,SC3BnCW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.edf43015.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport interface TabsType {\n  id: string,\n  title: string,\n  content: string,\n}\n\ninterface Props {\n  tabs: TabsType[],\n  onTabSelected: (tab: TabsType) => void,\n  selectedTabId: string,\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  onTabSelected,\n  selectedTabId,\n\n}) => {\n  const selectedTab: TabsType = tabs\n    .find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div className=\"section\">\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map((tab) => (\n              <li\n                key={tab.id}\n                className={classNames({\n                  'is-active': selectedTab === tab,\n                })}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (selectedTabId !== tab.id) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab.content}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs, TabsType } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const selectTab = (tab: TabsType) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1\n        className=\"title\"\n      >\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        onTabSelected={selectTab}\n        selectedTabId={selectedTab.id}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}